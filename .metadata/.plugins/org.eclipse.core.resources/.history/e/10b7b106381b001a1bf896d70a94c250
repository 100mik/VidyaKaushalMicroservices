package org.sj.msapprepo;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;
import java.util.Arrays;
import java.util.UUID;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.runner.RunWith;
import org.mockito.AdditionalAnswers;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.sj.msapprepo.Controller;
import org.sj.msapprepo.AppRepoRepository;
import org.sj.msapprepo.AppRepoIdentity;;

@ExtendWith(MockitoExtension.class)
public class AppRepoControllerTest {
	
	@InjectMocks
	Controller appController;
	
	@Mock
	AppRepoRepository appRepoRepository;
	
	@Test
	public void testAddApp()
	{
		MockHttpServletRequest request = new MockHttpServletRequest();
        RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(request));
        
        when(appRepoRepository.existsById(any(AppRepoIdentity.class))).thenReturn(true);
        when(appRepoRepository.save(any(AppRepo.class))).then(AdditionalAnswers.returnsFirstArg());
        
        AppRepoIdentity appId = new AppRepoIdentity();
        appId.setUserID(UUID.randomUUID());
        appId.setSchemeID(1234);
        
        
	}
}
