<?xml version="1.0" encoding="UTF-8"?><testrun name="ms-app-repo" project="ms-app-repo" tests="3" started="3" failures="0" errors="1" ignored="0">
  <testsuite name="org.sj.msapprepo.AppRepoControllerTest" time="0.583">
    <testcase name="testAddAppWhenNotUnique" classname="org.sj.msapprepo.AppRepoControllerTest" time="0.283"/>
    <testcase name="testAddAppWhenUnique" classname="org.sj.msapprepo.AppRepoControllerTest" time="0.275"/>
    <testcase name="testGetAppWhenFound" classname="org.sj.msapprepo.AppRepoControllerTest" time="0.025">
      <error>org.mockito.exceptions.misusing.WrongTypeOfReturnValue: 
The argument of type 'Object' cannot be returned because the following 
method should return the type 'Optional'
 -&gt; appRepoRepository.findById()

The reason for this error can be :
1. The wanted argument position is incorrect.
2. The answer is used on the wrong interaction.

Position of the wanted argument is 0 and the possible argument indexes for this method are :
    [0] Object

***
However if you're still unsure why you're getting above error read on.
Due to the nature of the syntax above problem might occur because:
1. This exception *might* occur in wrongly written multi-threaded tests.
   Please refer to Mockito FAQ on limitations of concurrency testing.
2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - 
   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.
&#13;
	at org.sj.msapprepo.AppRepoControllerTest.testGetAppWhenFound(AppRepoControllerTest.java:130)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at junit.framework.TestCase.runTest(TestCase.java:176)&#13;
	at junit.framework.TestCase.runBare(TestCase.java:141)&#13;
	at junit.framework.TestResult$1.protect(TestResult.java:122)&#13;
	at junit.framework.TestResult.runProtected(TestResult.java:142)&#13;
	at junit.framework.TestResult.run(TestResult.java:125)&#13;
	at junit.framework.TestCase.run(TestCase.java:129)&#13;
	at junit.framework.TestSuite.runTest(TestSuite.java:252)&#13;
	at junit.framework.TestSuite.run(TestSuite.java:247)&#13;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:124)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
